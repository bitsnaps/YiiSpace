<?php
/**
 * Created by PhpStorm.
 * User: yiqing
 * Date: 2017/4/13
 * Time: 14:43
 */

namespace my\test\console\controllers;

use Thrift\Exception\TException;
use Thrift\Protocol\TBinaryProtocol;
use Thrift\Server\TServerSocket;
use Thrift\Server\TSimpleServer;
use Thrift\Transport\TBufferedTransport;
use Thrift\Transport\THttpClient;
use Thrift\Transport\TPhpStream;
use Thrift\Transport\TSocket;
use yii\console\Controller;

use Thrift\ClassLoader\ThriftClassLoader;

require_once \Yii::getAlias('@common/lib').'/Thrift/ClassLoader/ThriftClassLoader.php';

class ThriftController extends  Controller
{

    public function actionServer()
    {
        // error_reporting(E_ALL);


        // print_r(get_included_files()) ;
        // $this->stdout(__METHOD__) ;

        // $GEN_DIR = realpath(dirname(__FILE__).'/..').'/gen-php';
        $GEN_DIR =  \Yii::getAlias('@my/test/thrift').'/gen-php';
        // 设置包含搜索目录
        // set_include_path($GEN_DIR) ;

        $loader = new ThriftClassLoader();
        $loader->registerNamespace('Thrift', \Yii::getAlias('@common/lib'));
        $loader->registerDefinition('shared', $GEN_DIR);
        $loader->registerDefinition('tutorial', $GEN_DIR);
        $loader->register();


        header('Content-Type', 'application/x-thrift');
        if (php_sapi_name() == 'cli') {
            echo "\r\n";
        }

        // header('Content-Type', 'application/x-thrift');
        include_once ($GEN_DIR.'/HelloService.php') ;
        $handler   = new \my\test\services\HelloServiceImpl();
        $processor = new \HelloServiceProcessor($handler);


        try {

            $transportFactory = new TBufferedTransport();
            $protocolFactory = new TBinaryProtocolFactory(true, true);

            //作为cli方式运行，监听端口，官方实现
            $transport = new TServerSocket('localhost', 9090);
            $server = new TSimpleServer($processor, $transport, $transportFactory, $transportFactory, $protocolFactory, $protocolFactory);
            $server->serve();

            //作为cli方式运行，非阻塞方式监听，基于libevent实现，非官方实现
            //$transport = new TNonblockingServerSocket('localhost', 9090);
            //$server = new TNonblockingServer($processor, $transport, $transportFactory, $transportFactory, $protocolFactory, $protocolFactory);
            //$server->serve();

            //客户端和服务端在同一个输入输出流上
            //使用方式
            //1) cli 方式：php Client.php | php Server.php
            //2) cgi 方式：利用Apache或nginx监听http请求，调用php-fpm处理，将请求转换为PHP标准输入输出流
            //$transport = new TBufferedTransport(new TPhpStream(TPhpStream::MODE_R | TPhpStream::MODE_W));
            //$protocol = new TBinaryProtocol($transport, true, true);
            //$transport->open();
            //$processor->process($protocol, $protocol);
            //$transport->close();

        } catch (TException $tx) {
            print 'TException: '.$tx->getMessage()."\n";
        }

    }

    public function actionClient()
    {
        // Load the package that we autogenerated for this tutorial
        require_once  \Yii::getAlias('@my/test/thrift/gen-php').'/HelloService.php';


         $GEN_DIR =  \Yii::getAlias('@my/test/thrift').'/gen-php';


        $loader = new ThriftClassLoader();
        $loader->registerNamespace('Thrift', \Yii::getAlias('@common/lib'));
        $loader->registerDefinition("HelloService", $GEN_DIR);
        $loader->register();



        try {
            $socket = new TSocket('localhost', 9090);
            $transport = new TBufferedTransport($socket);
            $protocol = new TBinaryProtocol($transport);
            $client = new \HelloServiceClient($protocol);

            $transport->open();

            $userName = $client->say_hello();
            echo $userName;

            $transport->close();
        } catch (\Exception $e) {
            echo $e->getMessage();
        }

    }

}