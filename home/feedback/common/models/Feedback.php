<?php

namespace home\feedback\common\models;

use year\base\DefaultAttributeSetter;
use year\helpers\RegexHelper;
use Yii;
use \home\feedback\common\models\base\Feedback as BaseFeedback;
use yii\helpers\StringHelper;

/**
 * This is the model class for table "feedback".
 */
class Feedback extends BaseFeedback
{

    const STATUS_ACCEPTED = 1;
    const STATUS_UN_ACCEPTED = 0;

    /**
     * @return array
     */
    public static function getStatusOptions()
    {
        return [
            static::STATUS_UN_ACCEPTED => '未受理',
            static::STATUS_ACCEPTED => '已受理',

        ];
    }

    /**
     * @return mixed|string
     */
    public function getStatusTitle()
    {
        $statusOptions = static::getStatusOptions();
        if (isset($statusOptions[$this->status])) {
            return $statusOptions[$this->status];
        } else {
            return '未定义状态';
        }
    }

    /**
     * @return string
     */
    public function getHotGradeTitle()
    {
        if($this->hot_grade != 0){
            return '是';
        }
        return '';
    }


    const TYPE_CONSULT = 10;
    const TYPE_COMPLAINT = 20;
    const TYPE_INFORM = 30;
    const TYPE_SUGGESTION = 40;
    const TYPE_TO_DIRECTOR = 50;
    const TYPE_OTHER = 50;


    /**
     * @param array $exclude
     * @return array
     */
    public static function getTypeOptions($exclude =[])
    {
        $options = [
            static::TYPE_CONSULT => '咨询',
            static::TYPE_COMPLAINT => '投诉',
           // static::TYPE_INFORM => '举报',
            static::TYPE_SUGGESTION => '建议',
            static::TYPE_TO_DIRECTOR => '向局长建议',
           // static::TYPE_OTHER => '其他',

        ];
        if(!empty($exclude) ){
            $exclude = (array)$exclude ;
            foreach ($exclude as $k){
                unset($options[$k]);
            }
        }
        return $options ;
    }

    /**
     * @return mixed|string
     */
    public function getTypeTitle()
    {
        $options = static::getTypeOptions();
        if (isset($options[$this->type_id])) {
            return $options[$this->type_id];
        } else {
            return '未定义类型';
        }
    }

    use DefaultAttributeSetter ;



    public $verifyCode ;

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return  [
            'cate_id' => '类别',
            'type_id' => '类型',
            'username' => '反映人姓名',
            'id_card' => '身份证号',
            'tel' => '联系电话',
            'contact_address' => '联系地址',
            'subject' => '来信主题',
            'body' => '来信内容',
            'reply_department' => '答复部门',
            'reply_at' => '答复时间',
            'reply_content' => '答复结果',
            'admin_updated_by' => '管理员修改者id',
            'created_at' => '创建时间',
            // 'updated_at' => '最后修改时间',
            'updated_at' => '更新时间',
            'status' => '状态',

            'verifyCode' => '验证码',

            'hot_grade' => '是否热点',
            'user_ip' => '用户ip地址',
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        $rules = [
            [['cate_id', 'type_id', 'reply_at', 'admin_updated_by', 'status', 'hot_grade'], 'integer'],
            [['type_id', 'username', 'id_card', 'tel', 'contact_address', 'subject', 'body'], 'required'],
            [['body', 'reply_content'], 'string'],
            [['username', 'reply_department'], 'string', 'max' => 32],
            [['id_card', 'tel'], 'string', 'max' => 20],
            [['contact_address'], 'string', 'max' => 255],
            [['subject'], 'string', 'max' => 120],


            [['cate_id'],'default','value'=>0],
            [['admin_updated_by'],'default','value'=>0],
            [['status'],'default','value'=>0],

            [['user_ip'], 'string', 'max' => 130],
            [['hot_grade'],'default','value'=>0],
            [['user_ip'],'default','value'=>Yii::$app->request->getUserIP()],

            [['id_card'], 'match',
                'pattern' => RegexHelper::getIdCardRegex() //'/^[1-9][0-9]{5}(19[0-9]{2}|200[0-9]|2010)(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])[0-9]{3}[0-9xX]$/'
                ],
        ];

        if($this->isNewRecord){

            // verifyCode needs to be entered correctly
          $rules[] =   ['verifyCode', 'captcha', /* 'captchaAction'=>'/feedback/entry/captcha' */] ;
          $rules[] =   ['verifyCode', 'required'] ;
        }
        return $rules ;
    }

    public function beforeSave($insert)
    {

        if(!$insert){
            if($this->isAttributeChanged('reply_content')){
                $this->reply_at = time() ;
            }
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }


    /**
     * 返回带姓的加密人名
     *
     * @return string
     */
    public function getCryptUserName()
    {
        return StringHelper::truncate($this->username,1,'*').'*' ;
    }

    /**
     * 返回加密的手机号码
     *
     * @return string
     */
    public function getCryptTel()
    {
        // $telLength = StringHelper::byteLength($this->tel);
        $telLength = strlen($this->tel);
        /*
        // $oneOfThirdLen = floor( $telLength / 3) ;
        $oneOfThirdLen = ceil( $telLength / 3) ;
        $tailParts = substr($this->tel,2*$oneOfThirdLen-1);
        return substr($this->tel,0,$oneOfThirdLen) . str_repeat('*',$oneOfThirdLen).$tailParts ;
        */
        $cryptLen = $telLength-4 ;
        return substr_replace($this->tel,str_repeat('*',$cryptLen),2,$cryptLen)  ; // .'|'.$this->tel;
    }

    /**
     * 受理编号
     * FIXME 这样生成的会出现重复记录？
     *
     * @return string
     */
    public function getApplicationNum()
    {
        // return  date("Y-m-d H:i:s");
        return  date("Y-m-d",$this->created_at) .$this->tel ;
    }
}
