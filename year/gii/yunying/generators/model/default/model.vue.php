<?php
/**
 * This is the template for generating the model class of a specified table.
 * DO NOT EDIT THIS FILE! It may be regenerated with Gii.
 */

use yii\helpers\Inflector;
use yii\helpers\StringHelper;

/**
 * @var yii\web\View $this
 * @var schmunk42\giiant\generators\model\Generator $generator
 * @var string $tableName full table name
 * @var string $className class name
 * @var yii\db\TableSchema $tableSchema
 * @var string[] $labels list of attribute labels (name => label)
 * @var string[] $rules list of validation rules
 * @var array $relations list of relations (name => relation declaration)
 *
 * @var $properties array list of properties (property => [type, name. comment])
 * @var $labels string[] list of attribute labels (name => label)
 * @var $rules string[] list of validation rules
 *
 * @see https://github.com/maoberlehner/how-to-structure-a-complex-vuex-store
 */

$constructorParams = [] ;
foreach ($properties as $property=>$info){
    $constructorParams[] = " {$property} = `` " ;
}
$constructorParams = implode(' ,',$constructorParams) ;

$constructorAssignments = [] ;
foreach ($properties as $property=>$info){
    $constructorAssignments[] = " this.{$property} = {$property} " ;
}
$constructorAssignments = implode(" ;\n",$constructorAssignments) ;
$constructorAssignments .= " ;\n " ;// 补足最后的一
?>
export class <?= $className ?> {
constructor({ <?= $constructorParams ?> } = {}) {
    <?= $constructorAssignments ?>
  }
}

export function create<?= $className ?>(data) {
return Object.freeze(new <?= $className ?>(data));
}
