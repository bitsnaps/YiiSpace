<?php
/**
 * This is the template for generating the model class of a specified table.
 * DO NOT EDIT THIS FILE! It may be regenerated with Gii.
 */
use yii\helpers\Inflector;
use yii\helpers\StringHelper;

/**
 * @var yii\web\View $this
 * @var schmunk42\giiant\generators\model\Generator $generator
 * @var string $tableName full table name
 * @var string $className class name
 * @var yii\db\TableSchema $tableSchema
 * @var string[] $labels list of attribute labels (name => label)
 * @var string[] $hints list of attribute comments (name => comment)
 * @var string[] $rules list of validation rules
 * @var array $relations list of relations (name => relation declaration)
 */


// print_r($labels);
// print_r($hints);

$attributes = implode(', ', array_keys($labels)) ;
?>

import React, { Component } from 'react';
import { Modal, Form, Input } from 'antd';

const FormItem = Form.Item;

class <?= $className ?>EditModal extends Component {

    constructor(props) {
        super(props);
        this.state = {
            visible: false,
        };
    }

    showModelHandler = (e) => {
    if (e) e.stopPropagation();
    this.setState({
                      visible: true,
                  });
};

hideModelHandler = () => {
    this.setState({
        visible: false,
    });
};

okHandler = () => {
    const { onOk } = this.props;
    this.props.form.validateFields((err, values) => {
        if (!err) {
        onOk(values);
        this.hideModelHandler();
    }
});
};

render() {
    const { children } = this.props;
    const { getFieldDecorator } = this.props.form;
    const { <?= $attributes ?> } = this.props.record;
    const formItemLayout = {
        labelCol: { span: 6 },
        wrapperCol: { span: 14 },
    };

    return (
        <span>
            <span onClick={this.showModelHandler}>
                { children }
            </span>
            <Modal
                title="Edit <?= Inflector::camel2words( $className ) ?>"
                visible={this.state.visible}
                onOk={this.okHandler}
                onCancel={this.hideModelHandler}
            >
                <Form horizontal onSubmit={this.okHandler}>

                    <?php foreach ($labels as $attr=>$label): ?>
                    <FormItem
                        {...formItemLayout}
                        label="<?= $label ?>"
                    >
                        {
                            getFieldDecorator('<?= $attr ?>', {
                                initialValue: <?= $attr ?>,
                            })(<Input />)
                        }
                    </FormItem>
                    <?php endforeach;  ?>

                </Form>
            </Modal>
        </span>
    );
}
}

export default Form.create()(<?= $className ?>EditModal);
